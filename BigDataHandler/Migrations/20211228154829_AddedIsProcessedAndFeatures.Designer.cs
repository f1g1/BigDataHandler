// <auto-generated />
using System;
using BigDataHandler.EFConfigs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BigDataHandler.Migrations
{
    [DbContext(typeof(BigDataContext))]
    [Migration("20211228154829_AddedIsProcessedAndFeatures")]
    partial class AddedIsProcessedAndFeatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BigDataHandler.Models.DataStamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp", "Type")
                        .IsUnique();

                    b.ToTable("DataStamps");
                });

            modelBuilder.Entity("BigDataHandler.Models.DataStampsStatisticalFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccXFeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("AccYFeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("AccZFeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("GyroXFeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("GyroYFeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("GyroZFeaturesId")
                        .HasColumnType("int");

                    b.Property<long>("StartTimestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("StopTimestamp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccXFeaturesId");

                    b.HasIndex("AccYFeaturesId");

                    b.HasIndex("AccZFeaturesId");

                    b.HasIndex("GyroXFeaturesId");

                    b.HasIndex("GyroYFeaturesId");

                    b.HasIndex("GyroZFeaturesId");

                    b.ToTable("DataStampsStatisticalFeatures");
                });

            modelBuilder.Entity("BigDataHandler.Models.StatisticalFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Max")
                        .HasColumnType("float");

                    b.Property<double>("Mean")
                        .HasColumnType("float");

                    b.Property<double>("Min")
                        .HasColumnType("float");

                    b.Property<double>("StandardDeviation")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("StatisticalFeatures");
                });

            modelBuilder.Entity("BigDataHandler.Models.DataStampsStatisticalFeatures", b =>
                {
                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "AccXFeatures")
                        .WithMany()
                        .HasForeignKey("AccXFeaturesId");

                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "AccYFeatures")
                        .WithMany()
                        .HasForeignKey("AccYFeaturesId");

                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "AccZFeatures")
                        .WithMany()
                        .HasForeignKey("AccZFeaturesId");

                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "GyroXFeatures")
                        .WithMany()
                        .HasForeignKey("GyroXFeaturesId");

                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "GyroYFeatures")
                        .WithMany()
                        .HasForeignKey("GyroYFeaturesId");

                    b.HasOne("BigDataHandler.Models.StatisticalFeatures", "GyroZFeatures")
                        .WithMany()
                        .HasForeignKey("GyroZFeaturesId");

                    b.Navigation("AccXFeatures");

                    b.Navigation("AccYFeatures");

                    b.Navigation("AccZFeatures");

                    b.Navigation("GyroXFeatures");

                    b.Navigation("GyroYFeatures");

                    b.Navigation("GyroZFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
